spring.application.name=Hamhama
spring.datasource.url=jdbc:mysql://localhost:3306/hamhama_db?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true
spring.datasource.username=root
spring.datasource.password=

spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
spring.jpa.hibernate.ddl-auto=update
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.security=DEBUG

gemini.api.key=AIzaSyA1rIiPUSVC4ynPc28PKZ5XRhFc1cd-viE
spring.servlet.multipart.max-file-size=5MB
spring.servlet.multipart.max-request-size=5MB

# --- JWT Configuration ---
# IMPORTANT: Use a strong, base64 encoded secret key. Generate one if needed.
# Store this securely (environment variable, secrets manager), NOT plain text in properties for production.
# Example generation in Java: Keys.secretKeyFor(SignatureAlgorithm.HS256).getEncoded() -> Base64 encode the result
jwt.secret.key=YWFzZGZhc2RmYXNkZmFzZGZzYWRmYXNkZmFzZGZhc2RmYWRzZmFzZGZhc2ZkYXNmZGFzZmQ=
jwt.expiration.ms=3600000
# jwt.refresh.token.expiration.ms=604800000 # Optional: 7 days for refresh token